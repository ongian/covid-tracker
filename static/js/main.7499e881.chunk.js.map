{"version":3,"sources":["Components/Body/Contents/Worlwide/WorldWideComponent/AllCase.module.css","Components/Body/Contents/Countries/CountriesComponent/EachCountry.module.css","Components/Body/Contents/Home/HomeComponents/HomeCase.module.css","Components/Footer/Footer.module.css","Components/HOC/ModalBG/ModalBG.module.css","Components/Body/Contents/Countries/CountriesComponent/CountrisComponent.module.css","Components/HOC/Divs/Divs.js","Components/HOC/ModalBG/ModalBG.js","Components/Header/Header.js","Components/Body/Contents/Home/HomeComponents/SelectCountry.js","Components/Body/Contents/Home/HomeComponents/HomeCase.js","Components/Body/Contents/Home/Home.js","Components/Body/Contents/Worlwide/WorldWideComponent/AllCase.js","Components/Body/Contents/Worlwide/Worldwide.js","Components/Body/Contents/Countries/CountriesComponent/EachCountry.js","Components/Body/Contents/Countries/CountriesComponent/CountriesComponent.js","Components/Body/Contents/Countries/Countries.js","Components/Footer/Footer.js","Components/Body/Body.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Divs","props","children","ModalBG","onClick","showBG","className","show","classess","Header","state","modalStats","showHideModal","setState","defaultHide","this","to","exact","Component","SelectCountry","optionCountry","allCountry","map","ctry","ind","key","iso","value","country","onChange","change","Homecase","homecss","homecase","headings","update","Date","updated","toUTCString","totalUpdates","updateBox","total","join","tally","Intl","NumberFormat","format","totalcase","updateText","active","recovered","death","totaldeath","newcase","newdeath","critical","Home","dataFetch","countries","flag","error","errorMessage","getCountry","changed","target","changedCountry","axios","get","then","fetch","data","countryInfo","console","log","catch","countArray","i","length","push","iso3","prevProps","prevState","src","alt","cases","deaths","todayCases","todayDeaths","AllCase","allcase","all","allcss","allCase","worldcaseCon","toString","affected","affectedCountries","Worldwide","EachCountry","ctyCss","eachCountry","countryStats","toDateString","CountriesComponent","allCountries","eachCty","ctyDisplay","ctyData","ctyComp","countryContainer","Countries","Footer","style","footer","source","href","rel","Body","path","component","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7499e881.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"worldcaseCon\":\"AllCase_worldcaseCon__3prNP\",\"headings\":\"AllCase_headings__2h-_S\",\"updated\":\"AllCase_updated__28mxF\",\"totalUpdates\":\"AllCase_totalUpdates__34gg0\",\"updateBox\":\"AllCase_updateBox__3mPcq\",\"tally\":\"AllCase_tally__1jOhF\",\"updateText\":\"AllCase_updateText__1RrlV\",\"total\":\"AllCase_total__eW0vd\",\"active\":\"AllCase_active__2ob12\",\"recovered\":\"AllCase_recovered__22e2R\",\"death\":\"AllCase_death__vizbE\",\"critical\":\"AllCase_critical__2CfDR\",\"affected\":\"AllCase_affected__3Q_79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eachCountry\":\"EachCountry_eachCountry__l3Njp\",\"countryInfo\":\"EachCountry_countryInfo__sSnqS\",\"countryStats\":\"EachCountry_countryStats__29gId\",\"updated\":\"EachCountry_updated__QwaEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homecase\":\"HomeCase_homecase__1q4Jk\",\"headings\":\"HomeCase_headings__2H9bh\",\"update\":\"HomeCase_update__1Gigd\",\"totalUpdates\":\"HomeCase_totalUpdates__1UjUk\",\"updateBox\":\"HomeCase_updateBox__AZbKy\",\"tally\":\"HomeCase_tally__2qZub\",\"updateText\":\"HomeCase_updateText__vDkZE\",\"total\":\"HomeCase_total__316eI\",\"active\":\"HomeCase_active__2Vtu7\",\"recovered\":\"HomeCase_recovered__3PwdT\",\"death\":\"HomeCase_death__2N3q1\",\"critical\":\"HomeCase_critical__mp-oo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__bpJ7n\",\"source\":\"Footer_source__3zctK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"ModalBG_show__162tn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countryContainer\":\"CountrisComponent_countryContainer__1LlpF\"};","const Divs = (props) => props.children;\r\n\r\nexport default Divs;","import React from 'react';\r\nimport classess from './ModalBG.module.css';\r\nconst ModalBG = (props) => {\r\n    return <div onClick={props.showBG} className={props.show ? classess.show: ''}></div>\r\n}\r\n \r\nexport default ModalBG;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css';\r\nimport ModalBG from '../HOC/ModalBG/ModalBG';\r\nimport Divs from '../HOC/Divs/Divs';\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        modalStats: false\r\n    }\r\n    showHideModal = () => {\r\n        this.setState({modalStats: !this.state.modalStats})\r\n    }\r\n    defaultHide = () => {\r\n        this.setState({modalStats: false})\r\n    }\r\n    render() { \r\n        return (\r\n            <Divs>\r\n                <ModalBG showBG={this.showHideModal} show={this.state.modalStats}/>\r\n                <header>\r\n                    <section>\r\n                        <nav className={this.state.modalStats ? 'active': null}>\r\n                            <div className=\"hamburger-icon\" onClick={this.showHideModal}>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                            </div>\r\n                            <ul>\r\n                                <li>\r\n                                    <NavLink to=\"/\" exact onClick={this.defaultHide}>Home</NavLink>\r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/worldwide\" onClick={this.defaultHide}>Worldwide</NavLink>\r\n                                </li>\r\n                                <li>\r\n                                    <NavLink to=\"/countries\" onClick={this.defaultHide}>Countries</NavLink>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </section>\r\n                </header>\r\n            </Divs>\r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport Divs from '../../../../HOC/Divs/Divs';\r\n\r\nconst SelectCountry = (props) => {\r\n    const optionCountry = props.allCountry.map((ctry, ind) => {\r\n        return <option key={ctry.iso + ind} value={ctry.iso}>{ctry.country}</option>\r\n    })\r\n    return (\r\n        <Divs>\r\n            <select onChange={props.change} className=\"selectCountry\">\r\n                <option value=\"PHL\">Please select country...</option>\r\n                {optionCountry}\r\n            </select>\r\n        </Divs>\r\n    )\r\n}\r\n \r\nexport default SelectCountry;","import React from 'react';\r\nimport homecss from './HomeCase.module.css';\r\nconst Homecase = (props) => {\r\n    return (\r\n        <div className={homecss.homecase}>\r\n            <h2 className={homecss.headings}>Total updates</h2>\r\n            <p className={homecss.update}>Last update: {new Date(props.updated).toUTCString()}</p>\r\n            <div className={homecss.totalUpdates}>\r\n                <div className={[homecss.updateBox, homecss.total].join(' ')}>\r\n                    <p className={homecss.tally}>{new Intl.NumberFormat().format(props.totalcase)}</p>\r\n                    <p className={homecss.updateText}>Total case</p>\r\n                </div>\r\n                <div className={[homecss.updateBox, homecss.active].join(' ')}>\r\n                    <p className={homecss.tally}>{new Intl.NumberFormat().format(props.active)}</p>\r\n                    <p className={homecss.updateText}>Active case</p>\r\n                </div>\r\n                <div className={[homecss.updateBox, homecss.recovered].join(' ')}>\r\n                    <p className={homecss.tally}>{new Intl.NumberFormat().format(props.recovered)}</p>\r\n                    <p className={homecss.updateText}>Total recovery</p>\r\n                </div>\r\n                <div className={[homecss.updateBox, homecss.death].join(' ')}>\r\n                    <p className={homecss.tally}>{new Intl.NumberFormat().format(props.totaldeath)}</p>\r\n                    <p className={homecss.updateText}>Total death</p>\r\n                </div>\r\n                <div className={[homecss.updateBox, homecss.total].join(' ')}>\r\n                    <p className={homecss.tally}>{new Intl.NumberFormat().format(props.newcase)}</p>\r\n                    <p className={homecss.updateText}>Case today</p>\r\n                </div>\r\n                <div className={[homecss.updateBox, homecss.death].join(' ')}>\r\n                    <p className={homecss.tally}>{new Intl.NumberFormat().format(props.newdeath)}</p>\r\n                    <p className={homecss.updateText}>Death today</p>\r\n                </div>\r\n                <div className={[homecss.updateBox, homecss.critical].join(' ')}>\r\n                    <p className={homecss.tally}>{new Intl.NumberFormat().format(props.critical)}</p>\r\n                    <p className={homecss.updateText}>No. of critical</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Homecase;","import React, { Component } from 'react';\r\nimport Divs from '../../../HOC/Divs/Divs';\r\nimport axios from 'axios';\r\nimport SelectCountry from './HomeComponents/SelectCountry';\r\nimport Homecase from './HomeComponents/HomeCase';\r\nclass Home extends Component {\r\n    state = {\r\n        country: 'PHL',\r\n        dataFetch: [],\r\n        countries: [],\r\n        flag: null,\r\n        error: false,\r\n        errorMessage: null\r\n    }\r\n    componentDidMount(){\r\n        this.changedCountry()\r\n        axios.get('https://corona.lmao.ninja/v2/countries/').then(getCountry => {\r\n            let countArray = [];\r\n            for(let i = 0; i < getCountry.data.length; i++){\r\n                countArray.push({country: getCountry.data[i].country, iso: getCountry.data[i].countryInfo.iso3})\r\n            }\r\n            this.setState({countries: countArray})\r\n        }).catch(error => {\r\n            if(error){\r\n                this.setState({error: true});\r\n                this.setState({errorMessage: error});\r\n            }\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.country !== this.state.country){\r\n            this.changedCountry()\r\n        }\r\n    }\r\n\r\n    getCountry = (changed) => {\r\n        this.setState({country: changed.target.value});\r\n    }\r\n    changedCountry = () => {\r\n        axios.get('https://corona.lmao.ninja/v2/countries/' + this.state.country).then(fetch => {\r\n            this.setState({dataFetch: fetch.data});\r\n            this.setState({flag: fetch.data.countryInfo.flag});\r\n            console.log(this.state.dataFetch)\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    render() { \r\n        return (\r\n            <Divs>\r\n                <h1 className=\"selectedCountry\">\r\n                    <span><img src={this.state.flag} alt={this.state.dataFetch.country} /></span> \r\n                    {this.state.dataFetch.country}\r\n                </h1>\r\n                <SelectCountry allCountry={this.state.countries} change={this.getCountry} />\r\n                <Homecase \r\n                    totalcase={this.state.dataFetch.cases}\r\n                    active={this.state.dataFetch.active}\r\n                    recovered={this.state.dataFetch.recovered}\r\n                    totaldeath={this.state.dataFetch.deaths}\r\n                    newcase={this.state.dataFetch.todayCases}\r\n                    newdeath={this.state.dataFetch.todayDeaths}\r\n                    critical={this.state.dataFetch.critical}\r\n                    updated={this.state.dataFetch.updated}\r\n                />\r\n            </Divs>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport allcss from './AllCase.module.css';\r\n\r\nclass AllCase extends Component {\r\n    state = {\r\n        allcase: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://corona.lmao.ninja/v2/all').then(all => {\r\n            this.setState({allcase: all.data})\r\n        })\r\n    }\r\n    render() { \r\n        return (\r\n            <div className={allcss.allCase}>\r\n                <h2>Worldwide case</h2>\r\n                <div className={allcss.worldcaseCon}>\r\n                    <p className={allcss.updated}>\r\n                        Last updated: {Date(this.state.allcase.updated).toString()}\r\n                    </p>\r\n                    <div className={allcss.totalUpdates}>\r\n                    <div className={[allcss.updateBox, allcss.affected].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.affectedCountries)}</p>\r\n                        <p className={allcss.updateText}>Affected countries</p>\r\n                    </div>\r\n                    <div className={[allcss.updateBox, allcss.total].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.cases)}</p>\r\n                        <p className={allcss.updateText}>Worldwide case</p>\r\n                    </div>\r\n                    <div className={[allcss.updateBox, allcss.active].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.active)}</p>\r\n                        <p className={allcss.updateText}>Active case</p>\r\n                    </div>\r\n                    <div className={[allcss.updateBox, allcss.recovered].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.recovered)}</p>\r\n                        <p className={allcss.updateText}>Total recovery</p>\r\n                    </div>\r\n                    <div className={[allcss.updateBox, allcss.death].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.deaths)}</p>\r\n                        <p className={allcss.updateText}>Total death</p>\r\n                    </div>\r\n                    <div className={[allcss.updateBox, allcss.total].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.todayCases)}</p>\r\n                        <p className={allcss.updateText}>Case today</p>\r\n                    </div>\r\n                    <div className={[allcss.updateBox, allcss.death].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.todayDeaths)}</p>\r\n                        <p className={allcss.updateText}>Death today</p>\r\n                    </div>\r\n                    <div className={[allcss.updateBox, allcss.critical].join(' ')}>\r\n                        <p className={allcss.tally}>{new Intl.NumberFormat().format(this.state.allcase.critical)}</p>\r\n                        <p className={allcss.updateText}>No. of critical</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AllCase;","import React from 'react';\r\nimport Divs from '../../../HOC/Divs/Divs';\r\nimport AllCase from './WorldWideComponent/AllCase';\r\nconst Worldwide = (props) => {\r\n    return (\r\n        <Divs>\r\n            <AllCase />\r\n        </Divs>\r\n    );\r\n}\r\n \r\nexport default Worldwide;","import React from 'react';\r\nimport ctyCss from './EachCountry.module.css';\r\n\r\nconst EachCountry = (props) => {\r\n    return (\r\n        <div className={ctyCss.eachCountry}>\r\n            <div className={ctyCss.countryInfo}>\r\n                <img src={props.flag} alt={props.country} />\r\n                <h2>{props.country}</h2>\r\n            </div>\r\n            <div className={ctyCss.countryStats}>\r\n                <p><strong>Total cases:</strong> {new Intl.NumberFormat().format(props.cases)}</p>\r\n                <p><strong>No of deaths:</strong> {new Intl.NumberFormat().format(props.deaths)}</p>\r\n                <p><strong>Active cases:</strong> {new Intl.NumberFormat().format(props.active)}</p>\r\n                <p><strong>Case Today:</strong> {new Intl.NumberFormat().format(props.todayCases)}</p>\r\n                <p><strong>Deaths today:</strong> {new Intl.NumberFormat().format(props.todayDeaths)}</p>\r\n            </div>\r\n            <p className={ctyCss.updated}>\r\n                Last updates: {new Date(props.updated).toDateString()}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default EachCountry;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Divs from '../../../../HOC/Divs/Divs';\r\nimport EachCountry from './EachCountry';\r\nimport ctyComp from './CountrisComponent.module.css';\r\n\r\nclass CountriesComponent extends Component {\r\n    state = {\r\n        allCountries: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://corona.lmao.ninja/v2/countries').then(eachCty => {\r\n            this.setState({allCountries: eachCty.data})\r\n        })\r\n    }\r\n    render() { \r\n        let ctyDisplay = 'Loading...'\r\n        if(this.state.allCountries.length > 0){\r\n            ctyDisplay = this.state.allCountries.map((ctyData, ind) => {\r\n                return <EachCountry \r\n                        key={ind} \r\n                        flag={ctyData.countryInfo.flag}\r\n                        country={ctyData.country}\r\n                        cases={ctyData.cases}\r\n                        deaths={ctyData.deaths}\r\n                        active={ctyData.active}\r\n                        todayCases={ctyData.todayCases}\r\n                        todayDeaths={ctyData.todayDeaths}\r\n                        updated={ctyData.updated}\r\n                    />\r\n            })\r\n        }\r\n        return (\r\n            <Divs>\r\n                <div className={ctyComp.countryContainer}>\r\n                    {ctyDisplay}\r\n                </div>\r\n            </Divs>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CountriesComponent;","import React from 'react';\r\nimport CountriesComponent from './CountriesComponent/CountriesComponent';\r\nimport Divs from '../../../HOC/Divs/Divs';\r\n\r\nconst Countries = () => {\r\n    return (\r\n        <Divs>\r\n            <h1>Case per country</h1>\r\n            <CountriesComponent />\r\n        </Divs>\r\n    );\r\n}\r\n \r\nexport default Countries;","import React from 'react';\r\nimport style from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <p>Christian Ong</p>\r\n            <p className={style.source}>\r\n                <a href=\"https://corona.lmao.ninja/\" rel=\"noopener noreferrer nofollow\" target=\"_blank\">Source: Novel Covid API</a>\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n \r\nexport default Footer;","import React from 'react';\r\nimport Divs from '../HOC/Divs/Divs';\r\nimport Header from '../Header/Header';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from './Contents/Home/Home';\r\nimport Worldwide from './Contents/Worlwide/Worldwide';\r\nimport Countries from './Contents/Countries/Countries';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst Body = (props) => {\r\n    return (\r\n        <Divs>\r\n            <Header />\r\n            <section className=\"main\">\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/worldwide\" component={Worldwide} />\r\n                <Route path=\"/countries\" component={Countries} />\r\n            </section>\r\n            <Footer/>\r\n        </Divs>\r\n    );\r\n} \r\n \r\nexport default Body;","import React from 'react';\nimport './main.css';\nimport Body from './Components/Body/Body';\nimport {BrowserRouter} from 'react-router-dom';\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/\">\n    <div className=\"App\">\n      <Body />\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}